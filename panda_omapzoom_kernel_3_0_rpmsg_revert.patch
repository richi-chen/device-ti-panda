diff --git a/arch/arm/mach-omap2/omap_ram_console.h b/arch/arm/mach-omap2/omap_ram_console.h
index adfa6934..edd75e8 100644
--- a/arch/arm/mach-omap2/omap_ram_console.h
+++ b/arch/arm/mach-omap2/omap_ram_console.h
@@ -17,8 +17,8 @@
 #ifndef __OMAP_RAM_CONSOLE_H
 #define __OMAP_RAM_CONSOLE_H
 
-/* Board files use the following if they are ok with the defaults */
-#define OMAP_RAM_CONSOLE_START_DEFAULT	(PLAT_PHYS_OFFSET + SZ_256M)
+/* Board files use the following if they are ok with 512M size defaults */
+#define OMAP_RAM_CONSOLE_START_DEFAULT	(PLAT_PHYS_OFFSET + SZ_512M)
 #define OMAP_RAM_CONSOLE_SIZE_DEFAULT	SZ_2M
 
 #ifdef CONFIG_OMAP_RAM_CONSOLE
diff --git a/arch/arm/mach-omap2/remoteproc.c b/arch/arm/mach-omap2/remoteproc.c
index 8b8ae3e..0b7197f 100644
--- a/arch/arm/mach-omap2/remoteproc.c
+++ b/arch/arm/mach-omap2/remoteproc.c
@@ -20,7 +20,6 @@
 #include <linux/slab.h>
 #include <linux/remoteproc.h>
 #include <linux/memblock.h>
-#include <plat/common.h>
 #include <plat/omap_device.h>
 #include <plat/omap_hwmod.h>
 #include <plat/remoteproc.h>
@@ -223,17 +222,7 @@ static int __init omap_rproc_init(void)
 		const char *oh_name_opt = omap4_rproc_data[i].oh_name_opt;
 		oh_count = 0;
 
-		if (omap_total_ram_size() == SZ_512M) {
-			if (!strcmp("ipu", omap4_rproc_data[i].name))
-				omap4_rproc_data[i].firmware =
-					"ducati-m3.512MB.bin";
-			else if (!strcmp("dsp", omap4_rproc_data[i].name))
-				omap4_rproc_data[i].firmware =
-					"tesla-dsp.512MB.bin";
-		}
-
 		oh[0] = omap_hwmod_lookup(oh_name);
-
 		if (!oh[0]) {
 			pr_err("could not look up %s\n", oh_name);
 			continue;
diff --git a/arch/arm/plat-omap/omap_rpmsg.c b/arch/arm/plat-omap/omap_rpmsg.c
index 8d85393..fe35b53 100644
--- a/arch/arm/plat-omap/omap_rpmsg.c
+++ b/arch/arm/plat-omap/omap_rpmsg.c
@@ -679,9 +679,9 @@ static int __init omap_rpmsg_ini(void)
 			}
 		} else if (!strcmp(rpdev->rproc_name, "dsp")) {
 			paddr = omap_dsp_get_mempool_tbase(
-					OMAP_RPROC_MEMPOOL_DYNAMIC);
+					OMAP_RPROC_MEMPOOL_STATIC);
 			psize = omap_dsp_get_mempool_tsize(
-					OMAP_RPROC_MEMPOOL_DYNAMIC);
+					OMAP_RPROC_MEMPOOL_STATIC);
 		} else
 			break;
 
diff --git a/drivers/rpmsg/rpmsg_resmgr.c b/drivers/rpmsg/rpmsg_resmgr.c
index bfd11b8..d945a4b 100644
--- a/drivers/rpmsg/rpmsg_resmgr.c
+++ b/drivers/rpmsg/rpmsg_resmgr.c
@@ -43,6 +43,7 @@
 #define AUX_CLK_MIN	0
 #define AUX_CLK_MAX	5
 #define GPTIMERS_MAX	11
+#define MHZ		1000000
 #define MAX_MSG		(sizeof(struct rprm_ack) + sizeof(struct rprm_sdma))
 
 static struct dentry *rprm_dbg;
@@ -208,7 +209,7 @@ static int rprm_auxclk_request(struct rprm_elem *e, struct rprm_auxclk *obj)
 		goto error_aux_src;
 	}
 
-	ret = clk_set_rate(src_parent, obj->parent_src_clk_rate);
+	ret = clk_set_rate(src_parent, (obj->parent_src_clk_rate * MHZ));
 	if (ret) {
 		pr_err("%s: rate not supported by %s\n", __func__,
 					clk_src_name[obj->parent_src_clk]);
@@ -230,7 +231,7 @@ static int rprm_auxclk_request(struct rprm_elem *e, struct rprm_auxclk *obj)
 		goto error_aux_src_parent;
 	}
 
-	ret = clk_set_rate(acd->aux_clk, obj->clk_rate);
+	ret = clk_set_rate(acd->aux_clk, (obj->clk_rate * MHZ));
 	if (ret) {
 		pr_err("%s: rate not supported by %s\n", __func__, clk_name);
 		goto error_aux_enable;
